#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* 
Criar lista
Guardar 3 nomes
Mostrar os nomes
Buscar

 */
#define	MAX 10

typedef struct elementos {
    char nome[50];
    // Outros elementos
} t_elemento;

// Estrutura da lista
typedef struct lista {
    t_elemento vetor[MAX];//vet que armazena elem. da pilha
    int n; // posicao (indice) do ultimo elemento da lista
} t_lista; // tipo lista

t_lista criar() {
    t_lista lista;

    lista.n = -1;

    return lista;
}
int isCheia(t_lista * lista) {
    return (lista->n == MAX-1);
}

int inserir (t_lista * lista, int pos, t_elemento dado) {
    if ( isCheia(lista) || (pos > lista->n + 1) || (pos < 0) )
        return 0;

    //deslocaDireita(lista, pos);
    lista->vetor[pos] = dado;
    (lista->n)++;
    return 1;
}
int compara(t_elemento dado1, t_elemento dado2) {
    return strcmp(dado1.nome, dado2.nome);
}

int getPosicao(t_lista * lista, t_elemento dado) {
    int i;
    for (i=0; i<=lista->n; i++)
        if (compara(lista->vetor[i], dado)==0)
            return i;

    return -1;
}


int main() {
	t_lista m_lista;
	t_elemento m_elem;
	int i;
	char str[50];
	//criar lista
	m_lista = criar();
	//guardar tres nomes
	for(i=0; i<3; i++) {
		printf("Escreva um nome:\n");
		scanf("%s", str);
		printf("o nome digitado foi [%s]\n", str);
		strcpy(m_elem.nome, str);
		
		inserir(&m_lista, i, m_elem );
	}
	//mostrar os nomes
	for(i = 0; i<3; i++){
		printf("[%s]\n", m_lista.vetor[i].nome);
	}
	//buscar e mostrar nome
	
	printf("Escreva um nome a ser procurado:\n");
	scanf("%s", str);
	printf("nome digitado para busca foi [%s]\n", str);
	strcpy(m_elem.nome, str);
	i = getPosicao(&m_lista, m_elem);
	if (i != -1)
		printf("Nome encontrado na posicao [%d]\n");
		
	else 
		printf("Nao existe");
	
	return 0;
}